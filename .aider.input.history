
# 2025-06-19 21:17:48.568771
+n

# 2025-06-19 21:18:52.759375
+/add sqlite/schema.txt

# 2025-06-19 21:19:03.269506
+/add sqlite/local-ci.sh

# 2025-06-19 21:24:44.106101
+/editor

# 2025-06-19 21:34:20.077815
+Add a new table to the schema. The table should list merge commits to be pushed. It should have a column referencing its repo (and an appropriate join table), and columns for: the jj change ID, the tree hash of the commit, and a "state" which may be "QUEUED", "SUCCESS" or "FAILED".
+
+For now don't worry about how this table will be initially populated.
+
+Update the logic in local-ci.sh as follows:
+
+1. When completing a queue_commit run, if the commit ID that was tested has a jj commit ID that appears in the new table, update its state to SUCCESS or FAILED as appropriate.
+2. Before starting a new task in the main run loop, go through the table as follows:
+    a. Check if the tree hash of any change ID has changed. If so, remove it from the table and send a message via send-text.sh.
+    b. Check if each row's change is a direct descendant of the target branch on `origin` (fetch from `origin`). If not, remove it from the table and send an error via send-text.sh.
+    c. Check if any row's state is FAILED. If so, remove it from the table and send it via send-text.sh.
+    d. If any element row's state is SUCCESS, check whether the change ID has been gpg-signed. If not, send a message via send-text.sh. If so, then push it, remove the row from the table, and restart the loop.
+
+In the above, accumulate all the messages into a single call to send-text.sh. Don't send multiple messages in one shot!

# 2025-06-19 21:39:36.473571
+Please translate the French error messages to English. From now on, stick to English in all output.

# 2025-06-19 21:42:25.137463
+Rather than assuming the target branch is called `main`, put this in the `merge_pushes` table. Also, translate any French code comments into English.

# 2025-06-19 21:43:15.948003
+Also, rather than assuming the target remote is `origin` put that in the table as welll.

# 2025-06-19 21:48:37.307787
+/clear

# 2025-06-19 21:49:45.707469
+/drop sqlite/local-ci.sh

# 2025-06-19 21:49:48.294306
+/drop sqlite/schema.txt

# 2025-06-19 21:49:51.699455
+/add sqlite/local-ci.sh

# 2025-06-19 21:55:07.261462
+/code In the logic that checks the merge_pushes loop, separate the messages about dropping things from the table from the messages about needing signatures. If there is nothing else to do, the "needs signature" messages should be sent only once. (They can be sent again once the CI queue has done something, i.e. we can reset the "do not send again" toggle whene we update the `insactive_since` config field in the database.)

# 2025-06-19 21:55:45.396973
+n

# 2025-06-19 22:06:45.496842
+/add sqlite/github-merge.py

# 2025-06-19 22:12:53.284769
+/add sqlite/schema.txt

# 2025-06-19 22:13:06.747095
+/drop sqlite/github-merge.py

# 2025-06-19 22:13:10.125806
+/add sqlite/queue-merge.py

# 2025-06-19 22:13:36.504347
+/code Please complete the TODOs in queue-merge.py.

# 2025-06-19 22:14:02.537802
+/code Please complete the TODOs in queue-merge.py. All of your output should be in English.

# 2025-06-19 22:14:26.212982
+n

# 2025-06-19 22:16:48.994183
+/clear

# 2025-06-19 22:16:51.996144
+/code Please complete the TODOs in queue-merge.py. All of your output should be in English.

# 2025-06-19 22:17:41.441884
+n

# 2025-06-20 14:09:54.608913
+y

# 2025-06-20 14:09:56.554305
+n

# 2025-06-20 14:16:11.127993
+/add sqlite/compute-sha512-root.py

# 2025-06-20 14:16:25.239827
+/add sqlite/compute-merge-description.py

# 2025-06-20 14:16:48.742182
+/code Make the `tree_sha512sum` method from compute-sha512-root.py be available in compute-merge-description.py.

# 2025-06-20 14:18:00.548293
+/code Make the `tree_sha512sum` method from compute-sha512-root.py be available in compute-merge-description.py. Don't copy the method. Import it, adding whatever module boilerplate is necessary.

# 2025-06-20 14:18:56.171729
+n

# 2025-06-20 14:21:20.275958
+/quit
